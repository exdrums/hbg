apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbg-spa
  labels:
    app: hbg-spa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hbg-spa
  template:
    metadata:
      labels:
        app: hbg-spa
      annotations:
        # This annotation tells trust-manager to inject the CA from /etc/trusted-cas into the containerâ€™s trust store.
        trust-manager/inject: "true"
    spec:
      containers:
      - name: hbg-spa
        imagePullPolicy: Never # never pull local images from docker, always use local
        image: exdrums/hbg-spa
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: hbg-configmap
              key: asp_hosting_urls
        - name: 'HBGIDENTITY'
          valueFrom:
            configMapKeyRef:
              name: hbg-configmap
              key: hbg-sts-url
        - name: 'HBGSPA'
          valueFrom:
            configMapKeyRef:
              name: hbg-configmap
              key: hbg-spa-url
        - name: 'HBGIDENTITYADMIN'
          valueFrom:
            configMapKeyRef:
              name: hbg-configmap
              key: hbg-admin-url
        - name: 'HBGDB'
          valueFrom:
            secretKeyRef:
              name: hbg-secret
              key: hbgdb-identity_string # TODO: link with other database within the same postgres server
        # Optionally, if your trust-manager requires a volume mount:
        volumeMounts:
        - name: trusted-ca
          mountPath: /etc/ssl/certs/trusted
      volumes:
      - name: trusted-ca
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: hbg-spa-service
  labels:
    app: hbg-spa
spec:
  # type: NodePort
  selector:
    app: hbg-spa
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    # nodePort: 30788
