// <auto-generated />
using API.Emailer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Emailer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240721124218_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Emailer.Models.Distribution", b =>
                {
                    b.Property<long>("DistributionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DistributionID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("SenderID")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("TemplateID")
                        .HasColumnType("bigint");

                    b.HasKey("DistributionID");

                    b.HasIndex("SenderID");

                    b.HasIndex("TemplateID");

                    b.ToTable("Distributions");
                });

            modelBuilder.Entity("API.Emailer.Models.Email", b =>
                {
                    b.Property<long>("EmailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EmailID"));

                    b.Property<long>("DistributionID")
                        .HasColumnType("bigint");

                    b.Property<long>("ReceiverID")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("EmailID");

                    b.HasIndex("DistributionID");

                    b.HasIndex("ReceiverID");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("API.Emailer.Models.Receiver", b =>
                {
                    b.Property<long>("ReceiverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ReceiverID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DistributionID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ReceiverID");

                    b.HasIndex("DistributionID");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("API.Emailer.Models.Sender", b =>
                {
                    b.Property<long>("SenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SenderID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Passcode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ServerAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("SenderID");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("API.Emailer.Models.Template", b =>
                {
                    b.Property<long>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TemplateID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TemplateID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("API.Emailer.Models.Distribution", b =>
                {
                    b.HasOne("API.Emailer.Models.Sender", "Sender")
                        .WithMany("Distributions")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Emailer.Models.Template", "Template")
                        .WithMany("Distributions")
                        .HasForeignKey("TemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("API.Emailer.Models.Email", b =>
                {
                    b.HasOne("API.Emailer.Models.Distribution", "Distribution")
                        .WithMany("Emails")
                        .HasForeignKey("DistributionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Emailer.Models.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribution");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("API.Emailer.Models.Receiver", b =>
                {
                    b.HasOne("API.Emailer.Models.Distribution", "Distribution")
                        .WithMany()
                        .HasForeignKey("DistributionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribution");
                });

            modelBuilder.Entity("API.Emailer.Models.Distribution", b =>
                {
                    b.Navigation("Emails");
                });

            modelBuilder.Entity("API.Emailer.Models.Sender", b =>
                {
                    b.Navigation("Distributions");
                });

            modelBuilder.Entity("API.Emailer.Models.Template", b =>
                {
                    b.Navigation("Distributions");
                });
#pragma warning restore 612, 618
        }
    }
}
