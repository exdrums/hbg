// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Projects.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20240415200757_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Projects.Models.Article", b =>
                {
                    b.Property<long>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ArticleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("PlanID")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectID")
                        .HasColumnType("integer");

                    b.HasKey("ArticleID");

                    b.HasIndex("PlanID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Projects.Models.Plan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("integer");

                    b.HasKey("PlanID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Projects.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectID"));

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ProjectID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Projects.Models.ProjectPermission", b =>
                {
                    b.Property<long>("ProjectPermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ProjectPermissionID"));

                    b.Property<int>("ProjectID")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectPermissionID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectPermission");
                });

            modelBuilder.Entity("Projects.Models.Article", b =>
                {
                    b.HasOne("Projects.Models.Plan", "Plan")
                        .WithMany("Articles")
                        .HasForeignKey("PlanID");

                    b.HasOne("Projects.Models.Project", "Project")
                        .WithMany("Articles")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Projects.Models.Plan", b =>
                {
                    b.HasOne("Projects.Models.Project", "Project")
                        .WithMany("Plans")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Projects.Models.ProjectPermission", b =>
                {
                    b.HasOne("Projects.Models.Project", "Project")
                        .WithMany("ProjectPermissions")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Projects.Models.Plan", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Projects.Models.Project", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Plans");

                    b.Navigation("ProjectPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
